<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<!-- Init system properties checker - provides useful errors :) -->
	<context:property-placeholder location="classpath*:props/jpa.properties" />

	<!-- Grab the app mode from JVM argument -->
	<bean id="appMode" class="java.lang.String">
		<!-- <constructor-arg value="${app.mode}" /> -->
		<constructor-arg value="dev" />
	</bean>
	<bean id="lang" class="java.lang.String">
		<constructor-arg value="EN" />
	</bean>

	<!-- Get an instance of Settings class with default/mode properties injected 
		** Properties defined in mode specific properties files (e.g. dev, prod) 
		will override the properties in default.properties ** Properties defined 
		in properties files need a getter defined in the Settings class before they 
		can be used -->
	<bean id="appSettings" class="com.tenchael.ispring.common.Settings">
		<property name="configProperties">
			<bean
				class="org.springframework.beans.factory.config.PropertiesFactoryBean">
				<property name="propertiesArray">
					<list>
						<bean
							class="org.springframework.beans.factory.config.PropertiesFactoryBean">
							<property name="location" value="classpath:/props/application.properties" />
						</bean>
						<bean
							class="org.springframework.beans.factory.config.PropertiesFactoryBean">
							<property name="location" value="classpath:/props/#{appMode}.properties" />
						</bean>
						<bean
							class="org.springframework.beans.factory.config.PropertiesFactoryBean">
							<property name="location"
								value="classpath:/props/I18n/message_#{lang}.properties" />
						</bean>
					</list>
				</property>
			</bean>
		</property>
	</bean>


	<!-- JPA configuration -->

	<!-- dataSource -->
	<import resource="database.xml" />

	<bean id="jpaVendorAdapter"
		class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<property name="showSql" value="false" />
		<property name="database" value="${database}" />
	</bean>

	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceUnitName" value="persistenceUnit" />
		<property name="dataSource" ref="dataSource" />
		<property name="jpaVendorAdapter" ref="jpaVendorAdapter" />
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<jpa:repositories base-package="com.tenchael.ispring.repository" />


</beans>